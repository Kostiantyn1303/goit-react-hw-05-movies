{"version":3,"file":"static/js/672.a7e285db.chunk.js","mappings":"gMACaA,E,QAAYC,EAAAA,IAAH,gN,SCEP,SAASC,IACtB,OACE,UAACF,EAAD,YACE,SAAC,KAAD,CACEG,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IACT,MAIP,C,sJCfKC,EAAU,mCACD,SAAeC,IAA9B,4CAAe,OAAf,oBAAe,oGACUC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,oBADV,WACPG,EADO,QAICC,OAJD,sBAKL,IAAIC,MAAMF,EAASC,QALd,gCAOND,EAASG,KAAKC,SAPR,kE,wCCDFC,EAAWf,EAAAA,EAAAA,GAAH,kHAORgB,EAAYhB,EAAAA,EAAAA,GAAH,gD,SCsDtB,EAvDa,WACX,OAAkCiB,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAmCF,EAAAA,EAAAA,UAAS,IAA5C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAH,2FAyChB,OAjCA0B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6FACtBR,GAAa,GADS,kBAIGX,IAJH,UAIdE,EAJc,6BAMZ,IAAIE,MAAM,eANE,OAQdgB,EAAqBlB,EAASmB,KAAI,SAAAC,GACtC,OACE,SAACf,EAAD,WACE,yBACE,SAACS,EAAD,CACEO,GAAE,iBAAYD,EAAOE,IACrBC,MAAO,CAAEC,KAAMZ,GAFjB,SAIGQ,EAAOK,WANCL,EAAOE,GAWzB,IAEDX,EAAaO,GAvBO,2EA0BpBT,GAAa,GA1BO,6EAAH,qDA6BrBQ,GACD,GAAE,CAACL,KAGF,iCACE,SAACN,EAAD,UAAW,oBACVI,EACAF,IAAa,SAAC,IAAD,MAGnB,C","sources":["components/Loading/Loading.styled.jsx","components/Loading/Loading.jsx","Api/Api.jsx","pages/Home.styled.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const LoaderBox = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background-color: #f4efef; */\n  width: 100vw;\n  height: 100vh;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderBox } from './Loading.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderBox>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n      ;\n    </LoaderBox>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '06075111d285d6889482cec4dafeab0f';\nexport default async function fetchMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data.results;\n}\n","import styled from '@emotion/styled';\nexport const HomeList = styled.ul`\n  list-style: none;\n  margin-bottom: 5px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const HomeTitle = styled.h1`\n  margin-bottom: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport fetchMovies from 'Api/Api';\nimport { Link } from 'react-router-dom';\nimport Loader from 'components/Loading/Loading';\nimport { HomeList, HomeTitle } from './Home.styled';\nimport styled from '@emotion/styled';\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [moviesList, setMovieList] = useState([]);\n  const location = useLocation();\n\n  const StyledLink = styled(Link)`\n    color: black;\n\n    &:hover {\n      color: orange;\n    }\n  `;\n\n  useEffect(() => {\n    const fetchMoviesList = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetchMovies();\n        if (!response) {\n          throw new Error('No data :-(');\n        }\n        const selectedProperties = response.map(respon => {\n          return (\n            <HomeList key={respon.id}>\n              <li>\n                <StyledLink\n                  to={`movies/${respon.id}`}\n                  state={{ from: location }}\n                >\n                  {respon.title}\n                </StyledLink>\n              </li>\n            </HomeList>\n          );\n        });\n\n        setMovieList(selectedProperties);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesList();\n  }, [location]);\n\n  return (\n    <>\n      <HomeTitle>Trending today </HomeTitle>\n      {moviesList}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["LoaderBox","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","API_KEY","fetchMovies","axios","response","status","Error","data","results","HomeList","HomeTitle","useState","isLoading","setIsLoading","moviesList","setMovieList","location","useLocation","StyledLink","Link","useEffect","fetchMoviesList","selectedProperties","map","respon","to","id","state","from","title"],"sourceRoot":""}