{"version":3,"file":"static/js/843.e1dedf82.chunk.js","mappings":"uRAEMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAAeC,EAA9B,+CAAe,OAAf,oBAAe,WAA+BC,GAA/B,uFACUC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,2BAErBN,GAHW,WACPQ,EADO,QAKCC,OALD,sBAML,IAAIC,MAAMF,EAASC,QANd,gCAQND,EAASG,MARH,kE,uBCPFC,EAAO,WAClB,IAAQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAgCQ,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MACAC,EAAAA,EAAAA,YAAU,WACRC,EAAkBd,EACnB,GAAE,CAACA,IAEJ,IAAMc,EAAiB,mCAAG,WAAMd,GAAN,kFACxBY,GAAa,GADW,kBAICb,EAAgBC,GAJjB,UAIhBE,EAJgB,6BAMd,IAAIE,MAAM,eANI,OAQhBW,EAASb,EAASc,KAAKC,KAAI,SAAAC,GAE/B,OACE,4BACE,gBAAKC,IAAG,UAHO,mCAGP,OAAkBD,EAAKE,cAAgBC,IAAI,MACnD,yBAAG,SAAOH,EAAKI,SACf,yBAAG,cAAYJ,EAAKK,eAHZL,EAAKM,GAMlB,IACKC,EAAiBV,EAAOE,KAAI,SAAAS,GAChC,OAAOA,CACR,IACDhB,EAAYe,GArBU,2EAwBtBb,GAAa,GAxBS,6EAAH,sDA4BvB,OACE,2BACGH,EACAE,IAAa,SAAC,IAAD,MAGnB,EACD,G,gFC9CagB,E,QAAYC,EAAAA,IAAH,gN,SCEP,SAASC,IACtB,OACE,UAACF,EAAD,YACE,SAAC,KAAD,CACEG,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IACT,MAIP,C","sources":["Api/ApiFilmsCast.jsx","components/Cast/Cast.jsx","components/Loading/Loading.styled.jsx","components/Loading/Loading.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNjA3NTExMWQyODVkNjg4OTQ4MmNlYzRkYWZlYWIwZiIsInN1YiI6IjY0NzBhYjk4NTQzN2Y1MDEwNTVkNGIxZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mRwEl_U4MyMEALk_4oMS15bcG2msMRPjTcvYuIf-KU8',\n  },\n};\n\nexport default async function fetchMoviesCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport fetchMoviesCast from 'Api/ApiFilmsCast';\nimport Loader from 'components/Loading/Loading';\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [filmCast, setFilmCast] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetchMoviesActors(movieId);\n  }, [movieId]);\n\n  const fetchMoviesActors = async movieId => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetchMoviesCast(movieId);\n      if (!response) {\n        throw new Error('No data :-(');\n      }\n      const change = response.cast.map(item => {\n        const posterPath = 'https://image.tmdb.org/t/p/w200';\n        return (\n          <div key={item.id}>\n            <img src={`${posterPath}${item.profile_path}`} alt=\"\" />\n            <p>Name: {item.name}</p>\n            <p>Character: {item.character}</p>\n          </div>\n        );\n      });\n      const changeForState = change.map(a => {\n        return a;\n      });\n      setFilmCast(changeForState);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {filmCast}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\nexport default Cast;\n","import styled from '@emotion/styled';\nexport const LoaderBox = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background-color: #f4efef; */\n  width: 100vw;\n  height: 100vh;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderBox } from './Loading.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderBox>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n      ;\n    </LoaderBox>\n  );\n}\n"],"names":["options","method","headers","accept","Authorization","fetchMoviesCast","movieId","axios","response","status","Error","data","Cast","useParams","useState","filmCast","setFilmCast","isLoading","setIsLoading","useEffect","fetchMoviesActors","change","cast","map","item","src","profile_path","alt","name","character","id","changeForState","a","LoaderBox","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}